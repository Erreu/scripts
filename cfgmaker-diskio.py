#!/usr/bin/python

# Generate an MRTG config file according to the diskIOTable of a host

# Copyright 2011 Marlon Dutra
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from optparse import OptionParser
import netsnmp # apt-get install libsnmp-python
import sys
import datetime

parser = OptionParser()

parser.add_option('-c', '--community', default='public')

(options, args) = parser.parse_args()

host = args[0]

diskIOTable = netsnmp.VarList('.1.3.6.1.4.1.2021.13.15.1')
diskIODevice = netsnmp.VarList('.1.3.6.1.4.1.2021.13.15.1.1.2')
sysName = netsnmp.Varbind('.1.3.6.1.2.1.1.5.0')

netsnmp.snmpwalk(diskIODevice, Version=1, DestHost=host, Community=options.community)
netsnmp.snmpget(sysName, Version=1, DestHost=host, Community=options.community)
sysName = sysName.val

devices = {}
for i in diskIODevice:
	devices[int(i.iid)] = i.val

print '''# MRTG config file generated by cfgmaker-diskio
# sysName: %s
# %s
''' % (sysName, datetime.datetime.now())

print 'WorkDir: /var/www/mrtg/%s-io' % (sysName)
print 'EnableIPv6: no'
print

iids = sorted(devices.keys())
for iid in iids:
	print '# /dev/%s (id %d)' % (devices[iid], iid)
	print

	print 'Target[%s_%s_bytes]: .1.3.6.1.4.1.2021.13.15.1.1.3.%d&.1.3.6.1.4.1.2021.13.15.1.1.4.%d:%s@%s' % (sysName, devices[iid], iid, iid, options.community, host)
	print 'MaxBytes[%s_%s_bytes]: 4294967296' % (sysName, devices[iid])
	print 'Title[%s_%s_bytes]: %s -- I/O bytes/sec -- %s' % (sysName, devices[iid], sysName, devices[iid])
	print 'PageTop[%s_%s_bytes]: <h1>%s -- I/O bytes/sec -- %s</h1>' % (sysName, devices[iid], sysName, devices[iid])
	print 'WithPeak[%s_%s_bytes]: ymw' % (sysName, devices[iid])
	print 'Options[%s_%s_bytes]: nopercent, growright, nolegend' % (sysName, devices[iid])
	print 'YLegend[%s_%s_bytes]: bytes/sec' % (sysName, devices[iid])
	print 'ShortLegend[%s_%s_bytes]: bytes/sec' % (sysName, devices[iid])
	print 'LegendI[%s_%s_bytes]: read' % (sysName, devices[iid])
	print 'LegendO[%s_%s_bytes]: write' % (sysName, devices[iid])
	print

	# IOPS

	print 'Target[%s_%s_iops]: .1.3.6.1.4.1.2021.13.15.1.1.5.%d&.1.3.6.1.4.1.2021.13.15.1.1.6.%d:%s@%s' % (sysName, devices[iid], iid, iid, options.community, host)
	print 'MaxBytes[%s_%s_iops]: 4294967296' % (sysName, devices[iid])
	print 'Title[%s_%s_iops]: %s -- IOPS -- %s' % (sysName, devices[iid], sysName, devices[iid])
	print 'PageTop[%s_%s_iops]: <h1>%s -- IOPS -- %s</h1>' % (sysName, devices[iid], sysName, devices[iid])
	print 'WithPeak[%s_%s_iops]: ymw' % (sysName, devices[iid])
	print 'Options[%s_%s_iops]: nopercent, growright, nolegend' % (sysName, devices[iid])
	print 'YLegend[%s_%s_iops]: IOPS' % (sysName, devices[iid])
	print 'ShortLegend[%s_%s_iops]: IOPS' % (sysName, devices[iid])
	print 'LegendI[%s_%s_iops]: read' % (sysName, devices[iid])
	print 'LegendO[%s_%s_iops]: write' % (sysName, devices[iid])
	print

print >> sys.stderr, 'Do not forget to mkdir /var/www/mrtg/%s-io' % (sysName)
